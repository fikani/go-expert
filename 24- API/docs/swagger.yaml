basePath: /
definitions:
  dto.CreateProductInput:
    properties:
      name:
        type: string
      price:
        type: integer
    type: object
  dto.CreateUserInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dto.GetJwtTokenInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.GetJwtTokenOutput:
    properties:
      token:
        type: string
    type: object
  entity.Product:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  entity.User:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:8082
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: This is a sample server for an app example.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: App Example API
  version: "1.0"
paths:
  /products:
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Product'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a new product
      tags:
      - products
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new user
      tags:
      - users
  /users/token:
    post:
      consumes:
      - application/json
      description: Get JWT token
      parameters:
      - description: User data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.GetJwtTokenInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetJwtTokenOutput'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Get JWT token
      tags:
      - users
swagger: "2.0"
